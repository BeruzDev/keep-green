name: Keep GitHub Active - Natural Style

permissions:
  contents: write

on:
  schedule:
    - cron: "0 6 * * *" 
  workflow_dispatch:

jobs:
  keep-active:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v4

      - name: Generar commits aleatorios con patr√≥n realista
        run: |
          git config user.name "BeruzDev"
          git config user.email "albertus1291@gmail.com"
        
          # Obtener d√≠a de la semana (1=Lunes, 7=Domingo)
          day_of_week=$(date +%u)
          
          # Generar n√∫mero aleatorio para determinar si es d√≠a productivo
          productive_day=$((RANDOM % 7))
          
          # Determinar cantidad de commits seg√∫n el d√≠a
          if [ "$day_of_week" -eq 6 ] || [ "$day_of_week" -eq 7 ]; then
            # Fin de semana: 1-3 commits
            count=$(( (RANDOM % 3) + 1 ))
            echo "üèñÔ∏è Fin de semana: $count commits programados"
          elif [ "$productive_day" -lt 2 ]; then
            # 2 d√≠as aleatorios por semana: d√≠a productivo (5-10 commits)
            count=$(( (RANDOM % 6) + 5 ))
            echo "üî• D√≠a productivo: $count commits programados"
          else
            # D√≠as normales entre semana: 1-6 commits
            count=$(( (RANDOM % 6) + 1 ))
            echo "üìù D√≠a normal: $count commits programados"
          fi
        
          start_time=$(date +%s)
          max_duration=16200  
        
          for i in $(seq 1 $count)
          do
            # Mensajes m√°s variados y realistas
            messages=(
              "feat: mejoras en el c√≥digo"
              "fix: correcci√≥n de errores"
              "docs: actualizaci√≥n de documentaci√≥n"
              "refactor: optimizaci√≥n de c√≥digo"
              "style: ajustes de formato"
              "test: a√±adir pruebas"
              "chore: tareas de mantenimiento"
              "update: actualizaci√≥n de dependencias"
              "improve: mejoras generales"
              "add: nueva funcionalidad"
            )
            
            random_message=${messages[$((RANDOM % ${#messages[@]}))]}
            
            echo "Commit $i del d√≠a: $(date) - $random_message" >> activity.txt
            git add activity.txt
            git commit -m "$random_message [skip ci]"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
        
            if [ "$i" -lt "$count" ]; then
              current_time=$(date +%s)
              elapsed=$((current_time - start_time))
              if [ "$elapsed" -ge "$max_duration" ]; then
                echo "‚èπÔ∏è Tiempo m√°ximo alcanzado (${elapsed}s). Terminando."
                break
              fi
        
              # Tiempos de espera m√°s variados seg√∫n el tipo de d√≠a
              if [ "$productive_day" -lt 2 ]; then
                # D√≠a productivo: commits m√°s frecuentes (30min - 2h)
                sleep_time=$(( (RANDOM % 5400) + 1800 ))
              else
                # D√≠a normal: commits m√°s espaciados (1h - 4h)
                sleep_time=$(( (RANDOM % 10800) + 3600 ))
              fi
              
              hours=$(( sleep_time / 3600 ))
              minutes=$(( (sleep_time % 3600) / 60 ))
              echo "‚è±Ô∏è Esperando ${hours}h ${minutes}min antes del siguiente commit..."
              sleep $sleep_time
            fi
          done
